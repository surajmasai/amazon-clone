{"ast":null,"code":"var _jsxFileName = \"/home/suraj/Desktop/REACT/amazon/src/Components/Product.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport { useSelector } from \"react-redux\";\nimport { useParams } from \"react-router-dom\";\nimport { Box, Card, CardContent, CardActions, Typography, Button, CardMedia } from '@mui/material';\nimport \"./product.css\";\nimport Pagination from '@mui/material/Pagination';\nimport Stack from '@mui/material/Stack';\nimport { useNavigate } from \"react-router-dom\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const Product = () => {\n  _s();\n\n  const [sorting, setSorting] = useState(\"\");\n  const [categorytype, setCategoryType] = useState(\"\"); // const [] = useState(\"\")\n  // console.log(categorytype)\n\n  const {\n    cat,\n    type1,\n    type2,\n    type3\n  } = useParams();\n  const navigate = useNavigate();\n  console.log(cat, type1, type2, type3);\n  const res = useSelector(state => state.data); // console.log(res)\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"product-cont\",\n    children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n      children: \"sort by cost\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Stack, {\n      spacing: 2,\n      direction: \"row\",\n      children: [/*#__PURE__*/_jsxDEV(Button, {\n        variant: \"outlined\",\n        onClick: () => setSorting(\"asc\"),\n        children: \"Low To High\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        variant: \"outlined\",\n        onClick: () => setSorting(\"desc\"),\n        children: \"High To Low\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"h4\", {\n      children: \"filter by category\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Stack, {\n      spacing: 2,\n      direction: \"row\",\n      children: [/*#__PURE__*/_jsxDEV(Button, {\n        variant: \"outlined\",\n        onClick: () => setCategoryType(\"\"),\n        children: \"All\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        variant: \"outlined\",\n        onClick: () => setCategoryType(type1),\n        children: type1\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        variant: \"outlined\",\n        onClick: () => setCategoryType(type2),\n        children: type2\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        variant: \"outlined\",\n        onClick: () => setCategoryType(type3),\n        children: type3\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Show Products\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"product-cont1\",\n      children: res.filter(categ => {\n        return categ.category === cat;\n      }).filter(types => {\n        if (categorytype === \"\") {\n          return res;\n        } else {\n          return types.type === categorytype;\n        }\n      }).sort((a, b) => {\n        if (sorting === \"asc\") {\n          return a.price - b.price;\n        } else if (sorting === \"desc\") {\n          return b.price - a.price;\n        } else {\n          return 0;\n        }\n      }).map((data, index) => {\n        return /*#__PURE__*/_jsxDEV(\"div\", {\n          children: /*#__PURE__*/_jsxDEV(Box, {\n            width: \"300px\",\n            children: /*#__PURE__*/_jsxDEV(Card, {\n              children: [/*#__PURE__*/_jsxDEV(CardMedia, {\n                component: \"img\",\n                height: \"280\",\n                width: \"0\",\n                image: data.img,\n                alt: \"unsplash image\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 75,\n                columnNumber: 45\n              }, this), /*#__PURE__*/_jsxDEV(CardContent, {\n                children: [/*#__PURE__*/_jsxDEV(Typography, {\n                  gutterBottom: true,\n                  variant: \"h5\",\n                  component: \"div\",\n                  children: data.title\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 83,\n                  columnNumber: 49\n                }, this), /*#__PURE__*/_jsxDEV(Typography, {\n                  gutterBottom: true,\n                  variant: \"p\",\n                  component: \"div\",\n                  children: [\"Rs. \", data.price]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 86,\n                  columnNumber: 49\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 82,\n                columnNumber: 45\n              }, this), /*#__PURE__*/_jsxDEV(CardActions, {\n                className: \"btn\",\n                children: /*#__PURE__*/_jsxDEV(Button, {\n                  variant: \"contained\",\n                  onClick: () => {\n                    navigate(`/productDetails/${data.id}/${data.type}`);\n                  },\n                  children: \"Buy Now\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 91,\n                  columnNumber: 49\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 90,\n                columnNumber: 45\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 74,\n              columnNumber: 41\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 73,\n            columnNumber: 37\n          }, this)\n        }, index, false, {\n          fileName: _jsxFileName,\n          lineNumber: 72,\n          columnNumber: 33\n        }, this);\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Stack, {\n      spacing: 2,\n      children: /*#__PURE__*/_jsxDEV(Pagination, {\n        count: 5,\n        variant: \"outlined\",\n        shape: \"rounded\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 101,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 100,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 35,\n    columnNumber: 9\n  }, this);\n};\n\n_s(Product, \"w1d7FbIJiUdgMfT8t9KK6SCiFHA=\", false, function () {\n  return [useParams, useNavigate, useSelector];\n});\n\n_c = Product;\n\nvar _c;\n\n$RefreshReg$(_c, \"Product\");","map":{"version":3,"sources":["/home/suraj/Desktop/REACT/amazon/src/Components/Product.jsx"],"names":["React","useState","useSelector","useParams","Box","Card","CardContent","CardActions","Typography","Button","CardMedia","Pagination","Stack","useNavigate","Product","sorting","setSorting","categorytype","setCategoryType","cat","type1","type2","type3","navigate","console","log","res","state","data","filter","categ","category","types","type","sort","a","b","price","map","index","img","title","id"],"mappings":"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","sourcesContent":["import React, { useState } from 'react';\nimport { useSelector } from \"react-redux\";\nimport { useParams } from \"react-router-dom\";\nimport {\n    Box,\n    Card,\n    CardContent,\n    CardActions,\n    Typography,\n    Button,\n    CardMedia\n} from '@mui/material';\nimport \"./product.css\"\nimport Pagination from '@mui/material/Pagination';\nimport Stack from '@mui/material/Stack';\n\n\nimport { useNavigate } from \"react-router-dom\";\n\nexport const Product = () => {\n\n    const [sorting, setSorting] = useState(\"\");\n    const [categorytype, setCategoryType] = useState(\"\")\n    // const [] = useState(\"\")\n    // console.log(categorytype)\n    const { cat, type1, type2, type3 } = useParams();\n\n    const navigate = useNavigate()\n    console.log(cat, type1, type2, type3);\n\n    const res = useSelector((state) => state.data);\n    // console.log(res)\n\n    return (\n        <div className=\"product-cont\">\n            <h4>sort by cost</h4>\n            <Stack spacing={2} direction=\"row\">\n                <Button variant=\"outlined\" onClick={() => setSorting(\"asc\")}>Low To High</Button>\n                <Button variant=\"outlined\" onClick={() => setSorting(\"desc\")}>High To Low</Button>\n            </Stack>\n            <h4>filter by category</h4>\n            <Stack spacing={2} direction=\"row\">\n                <Button variant=\"outlined\" onClick={() => setCategoryType(\"\")}>All</Button>\n                <Button variant=\"outlined\" onClick={() => setCategoryType(type1)}>{type1}</Button>\n                <Button variant=\"outlined\" onClick={() => setCategoryType(type2)}>{type2}</Button>\n                <Button variant=\"outlined\" onClick={() => setCategoryType(type3)}>{type3}</Button>\n\n            </Stack>\n            <h1>Show Products</h1>\n            <div className=\"product-cont1\">\n                {\n                    res.filter((categ) => {\n                        return categ.category === cat\n                    }).filter((types) => {\n                        if (categorytype === \"\") {\n                            return res\n                        } else {\n                            return types.type === categorytype\n                        }\n                    })\n                        .sort((a, b) => {\n                            if (sorting === \"asc\") {\n                                return a.price - b.price\n                            } else if (sorting === \"desc\") {\n                                return b.price - a.price\n                            } else {\n                                return 0;\n                            }\n                        })\n                        .map((data, index) => {\n                            return (\n                                <div key={index}>\n                                    <Box width='300px' >\n                                        <Card>\n                                            <CardMedia\n                                                component='img'\n                                                height='280'\n                                                width='0'\n                                                image={data.img}\n                                                alt='unsplash image'\n                                            />\n                                            <CardContent>\n                                                <Typography gutterBottom variant='h5' component='div'>\n                                                    {data.title}\n                                                </Typography>\n                                                <Typography gutterBottom variant='p' component='div'>\n                                                    Rs. {data.price}\n                                                </Typography>\n                                            </CardContent>\n                                            <CardActions className=\"btn\">\n                                                <Button variant=\"contained\" onClick={() => { navigate(`/productDetails/${data.id}/${data.type}`) }}>Buy Now</Button>\n                                            </CardActions>\n                                        </Card>\n                                    </Box>\n                                </div>\n                            )\n                        })\n                }\n            </div>\n            <Stack spacing={2}>\n                <Pagination count={5} variant=\"outlined\" shape=\"rounded\" />\n            </Stack>\n        </div>\n    )\n}\n"]},"metadata":{},"sourceType":"module"}