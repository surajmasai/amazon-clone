{"ast":null,"code":"import { STORE_DATA // CAT_DATA\n} from \"./actionTypes\";\nconst initState = {\n  data: [],\n  cart: []\n};\n\nconst reducer = function () {\n  let state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : initState;\n  let action = arguments.length > 1 ? arguments[1] : undefined;\n  const product = action.payload;\n\n  switch (action.type) {\n    case STORE_DATA:\n      return { ...state,\n        data: action.payload\n      };\n      break;\n\n    case \"ADDITEM\":\n      //check if product is already exist;\n      const exist = state.cart.find(x => x.id === product.id);\n\n      if (exist) {\n        //increase the quantity\n        return state.cart.map(x => x.id === product.id ? { ...x,\n          qty: x.qty + 1\n        } : x);\n      } else {\n        const product = action.payload;\n        return [...state.cart, { ...product,\n          qty: 1\n        }];\n      }\n\n      break;\n    // case CAT_DATA:\n    //     return { data: state.data.filter((el) => el.category === action.payload.category) }\n\n    default:\n      return state;\n  }\n};\n\nexport { reducer };","map":{"version":3,"sources":["/home/suraj/Desktop/REACT/amazon/src/redux/Product/reducer.js"],"names":["STORE_DATA","initState","data","cart","reducer","state","action","product","payload","type","exist","find","x","id","map","qty"],"mappings":"AAAA,SACIA,UADJ,CAEI;AAFJ,OAGO,eAHP;AAMA,MAAMC,SAAS,GAAG;AACdC,EAAAA,IAAI,EAAE,EADQ;AAEdC,EAAAA,IAAI,EAAE;AAFQ,CAAlB;;AAMA,MAAMC,OAAO,GAAG,YAA+B;AAAA,MAA9BC,KAA8B,uEAAtBJ,SAAsB;AAAA,MAAXK,MAAW;AAE3C,QAAMC,OAAO,GAAGD,MAAM,CAACE,OAAvB;;AAEA,UAAQF,MAAM,CAACG,IAAf;AACI,SAAKT,UAAL;AACI,aAAO,EAAE,GAAGK,KAAL;AAAYH,QAAAA,IAAI,EAAEI,MAAM,CAACE;AAAzB,OAAP;AAEA;;AAEJ,SAAK,SAAL;AACI;AACA,YAAME,KAAK,GAAGL,KAAK,CAACF,IAAN,CAAWQ,IAAX,CAAiBC,CAAD,IAAOA,CAAC,CAACC,EAAF,KAASN,OAAO,CAACM,EAAxC,CAAd;;AACA,UAAIH,KAAJ,EAAW;AACP;AACA,eAAOL,KAAK,CAACF,IAAN,CAAWW,GAAX,CAAgBF,CAAD,IAAOA,CAAC,CAACC,EAAF,KAASN,OAAO,CAACM,EAAjB,GAAsB,EAAE,GAAGD,CAAL;AAAQG,UAAAA,GAAG,EAAEH,CAAC,CAACG,GAAF,GAAQ;AAArB,SAAtB,GAAiDH,CAAvE,CAAP;AACH,OAHD,MAGO;AACH,cAAML,OAAO,GAAGD,MAAM,CAACE,OAAvB;AACA,eAAO,CACH,GAAGH,KAAK,CAACF,IADN,EACY,EAAE,GAAGI,OAAL;AAAcQ,UAAAA,GAAG,EAAE;AAAnB,SADZ,CAAP;AAGH;;AACD;AAEJ;AACA;;AAEA;AACI,aAAOV,KAAP;AAxBR;AA0BH,CA9BD;;AAgCA,SAASD,OAAT","sourcesContent":["import {\n    STORE_DATA,\n    // CAT_DATA\n} from \"./actionTypes\";\n\n\nconst initState = {\n    data: [],\n    cart: []\n}\n\n\nconst reducer = (state = initState, action) => {\n\n    const product = action.payload;\n\n    switch (action.type) {\n        case STORE_DATA:\n            return { ...state, data: action.payload }\n\n            break;\n\n        case \"ADDITEM\":\n            //check if product is already exist;\n            const exist = state.cart.find((x) => x.id === product.id);\n            if (exist) {\n                //increase the quantity\n                return state.cart.map((x) => x.id === product.id ? { ...x, qty: x.qty + 1 } : x);\n            } else {\n                const product = action.payload;\n                return [\n                    ...state.cart, { ...product, qty: 1 }\n                ]\n            }\n            break;\n\n        // case CAT_DATA:\n        //     return { data: state.data.filter((el) => el.category === action.payload.category) }\n\n        default:\n            return state;\n    }\n}\n\nexport { reducer }"]},"metadata":{},"sourceType":"module"}